{
  "url": "https://npepa32v9l.execute-api.us-east-1.amazonaws.com/v2/?project_id=19989138&filename=python/0_e_s1_data_structure.html&ref=master",
  "content": "<div class=\"mce-toc\">\n<h2>Table of Contents</h2>\n<ul>\n<li>\u00a0</li>\n<li><a href=\"#mcetoc_1egvo5vbn3\">Avalia\u00e7\u00e3o 01</a>\n<ul>\n<li><a href=\"#mcetoc_1egvsckqv3\">Exerc\u00edcios</a></li>\n<li><a href=\"#mcetoc_1el3gpf963\">Entradas e Sa\u00eddas</a></li>\n<li><a href=\"#mcetoc_1eh146n6m3\">Crit\u00e9rios de aceita\u00e7\u00e3o</a></li>\n</ul>\n</li>\n<li><a href=\"#mcetoc_1egvoav555j\">Entreg\u00e1veis</a></li>\n</ul>\n</div>\n<h1 id=\"mcetoc_1el3gpf962\"></h1>\n<p>\u00a0</p>\n<h1 id=\"mcetoc_1egvqb974123\" style=\"font-family: sans-serif;\">[Avalia\u00e7\u00e3o] S1 - Estrutura de Dados</h1>\n<p style=\"font-family: sans-serif; font-size: medium; font-weight: 400;\"><em>Nesta avalia\u00e7\u00e3o, voc\u00ea utilizar\u00e1 tanto conhecimentos obtidos esta semana, quanto conhecimentos acumulados desde que come\u00e7amos a estudar Python.</em></p>\n<h1 id=\"mcetoc_1egvo5vbn3\"></h1>\n<p>\u00a0</p>\n<h2 id=\"mcetoc_1egvsckqv3\">Exerc\u00edcios</h2>\n<p>Hoje voc\u00ea criar\u00e1 um super trunfo de super-her\u00f3is. Vamos considerar cada carta do super trunfo como um dicion\u00e1rio em python, cada uma das cartas t\u00eam os seguintes atributos a serem considerados:</p>\n<ul>\n<li><strong>intelligence:</strong> intelig\u00eancia do super-her\u00f3i</li>\n<li><strong>power:</strong> seu poder sobrenatural perante os outros super-her\u00f3is</li>\n<li><strong>strenght:</strong> for\u00e7a f\u00edsica do super-heroi</li>\n<li><strong>agility:</strong> agilidade do super-her\u00f3i</li>\n<li><strong>vitality:</strong> resist\u00eancia e energia do super-heroi</li>\n</ul>\n<p>Defina uma constante chamada <span style=\"color: #ba372a; background-color: #ced4d9;\">SUPER_HEROS</span> <a href=\"https://gitlab.com/-/snippets/2036273\" rel=\"noopener\" target=\"_blank\">conforme este snippet</a>.</p>\n<p>Defina as seguintes fun\u00e7\u00f5es:</p>\n<ol>\n<li><span style=\"color: #ba372a; background-color: #ced4d9;\">get_players_decks(card_list)</span><br/>\n<ul>\n<li><strong>Par\u00e2metros:</strong>\n<ul>\n<li><span style=\"color: #ba372a; background-color: #ced4d9;\">card_list</span>: <strong>Lista\u00a0de dicion\u00e1rios</strong>, em que cada dicion\u00e1rio <strong>representa uma carta</strong></li>\n</ul>\n</li>\n<li><strong>Procedimento:</strong>\n<ul>\n<li>Verificar se a <strong>quantidade de</strong> <strong>cartas \u00e9 par</strong>, caso n\u00e3o seja, retornar <span style=\"color: #ba372a; background-color: #ced4d9;\">None</span></li>\n<li>De forma <strong>aleat\u00f3ria</strong> (shuffle)<strong> e igualit\u00e1ria\u00a0<strong>dividir</strong>\u00a0as cartas</strong> (dicion\u00e1rios) da lista <span style=\"color: #ba372a; background-color: #ced4d9;\">card_list</span> entre dois jogadores (embaralhar cartas para 2 jogadores)</li>\n</ul>\n</li>\n<li><strong>Retorno:</strong> Uma <strong>tupla de duas posi\u00e7\u00f5es</strong>, a primeira para o jogador A e a segunda para o jogador B. <strong>Cada posi\u00e7\u00e3o</strong> da tupla <strong>deve conter uma lista de dicion\u00e1rios</strong>, em que cada <strong>dicion\u00e1rio \u00e9 uma\u00a0 carta</strong>.<br/><br/></li>\n</ul>\n</li>\n<li><span style=\"color: #ba372a; background-color: #ced4d9;\">compare_cards(card_of_player_a, card_of_player_b, score)</span>\u00a0\n<ul>\n<li><strong>Par\u00e2metros:</strong>\n<ul>\n<li><span style=\"color: #ba372a; background-color: #ced4d9;\">card_of_player_a</span>: Um dicion\u00e1rio contendo as cartas do primeiro jogador</li>\n<li><span style=\"color: #ba372a; background-color: #ced4d9;\">card_of_player_b</span>: Um dicion\u00e1rio contendo as cartas do segundo jogador</li>\n<li><span style=\"color: #ba372a; background-color: #ced4d9;\">score</span> Uma <strong>tupla com duas posi\u00e7\u00f5es</strong>. Na primeira posi\u00e7\u00e3o, um <strong>valor num\u00e9rico</strong> <strong>indicando a pontua\u00e7\u00e3o</strong> do jogador A e a segunda posi\u00e7\u00e3o um valor num\u00e9rico indicando a pontua\u00e7\u00e3o do jogador B</li>\n</ul>\n</li>\n<li><strong>Procedimento:</strong>\n<ul>\n<li>Deve comparar <strong>cada uma das propriedades</strong> da carta do jogador A com a carta do jogador B</li>\n<li>Para <strong>cada compara\u00e7\u00e3o</strong>, mostrar uma mensagem na tela (utilizando print) para mostrar, qual das duas cartas tem tal propriedade com valor maior. <strong>Veja os exemplos</strong> na se\u00e7\u00e3o <strong>\"Entradas e Sa\u00eddas\"</strong></li>\n<li>Baseando-se no <strong>resultado de todas as compara\u00e7\u00f5es</strong>, o <strong>score</strong> <strong>do jogador com a carta vencedora</strong> deve ser <strong>incrementado em 1</strong>.</li>\n<li>Em caso de<strong> empate, n\u00e3o incrementar o score</strong> de nenhum dos dois jogadores</li>\n</ul>\n</li>\n<li><strong>Retorno:</strong> Uma <strong>tupla de duas posi\u00e7\u00f5es</strong> representando os <strong>scores atualizado</strong>.<br/><br/></li>\n</ul>\n</li>\n<li><span style=\"color: #ba372a; background-color: #ced4d9;\">play(card_list, score)</span>\n<ul>\n<li><strong>Par\u00e2metros:</strong>\n<ul>\n<li><span style=\"color: #ba372a; background-color: #ced4d9;\">card_list</span>:<strong> Lista de dicion\u00e1rios</strong>, em que cada dicion\u00e1rio\u00a0<strong>representa uma carta.</strong></li>\n<li><span style=\"color: #ba372a; background-color: #ced4d9;\">score</span>:<strong> Uma <strong>tupla com duas posi\u00e7\u00f5es</strong><span style=\"font-weight: 400;\">. Na primeira posi\u00e7\u00e3o, um\u00a0</span><strong>valor num\u00e9rico</strong><span style=\"font-weight: 400;\">\u00a0</span><strong>indicando a pontua\u00e7\u00e3o</strong><span style=\"font-weight: 400;\"> do jogador A e a segunda posi\u00e7\u00e3o um valor num\u00e9rico indicando a pontua\u00e7\u00e3o do jogador B.</span></strong></li>\n</ul>\n</li>\n<li><strong>Procedimento:</strong>\n<ul>\n<li>Chamar a fun\u00e7\u00e3o <span style=\"color: #ba372a; background-color: #ced4d9;\">get_players_decks</span> para obter o deck de cada jogador.</li>\n<li>Utilizar a fun\u00e7\u00e3o\u00a0<span style=\"color: #ba372a; background-color: #ced4d9;\">compare_cards</span> para comparar as cartas dos jogadores.\n<ul>\n<li>A primeira carta do \"jogador A\" deve ser comparada com a primeira carta do \"jogador B\", de forma consecutiva.</li>\n</ul>\n</li>\n<li>Montar uma tupla com duas posi\u00e7\u00f5es, sendo a primera posi\u00e7\u00e3o o total de cartas que vencedoras do \"jogador A\" e a segunda posi\u00e7\u00e3o, o total de cartas vencedoras do \"jogador B\".</li>\n</ul>\n</li>\n<li><strong>Retorno:</strong> Uma tupla com duas posi\u00e7\u00f5es, em sua primeira posi\u00e7\u00e3o, o total de cartas vitoriosas do \"jogador A\", e na segunda posi\u00e7\u00e3o, o total de cartas vitoriosas do \"jogador B\".</li>\n</ul>\n</li>\n</ol>\n<h4>\u00a0</h4>\n<h2 id=\"mcetoc_1el3gpf963\">Entradas e Sa\u00eddas</h2>\n<ul>\n<li><span style=\"color: #ba372a; background-color: #ced4d9;\">get_players_decks(card_list)</span></li>\n</ul>\n<pre class=\"language-python\"><code># EXEMPLO: 1\n\nplayers_decks = get_players_decks(SUPER_HEROS)\n\ncard_of_player_a = players_decks[0]\ncard_of_player_b = players_decks[1]\n\nprint(players_decks)\n&gt; (\n       [\n            {'name': 'the thing',\n             'intelligence': 3,\n             'power': 6,\n             'strenght': 10,\n             'agility': 2,\n             'vitality': 10},\n            {'name': 'huck',\n             'intelligence': 9,\n             'power': 8,\n            'strenght': 10,\n             'agility': 7,\n             'vitality': 10}\n    ],\n    [\n          {'name': 'super man',\n           'intelligence': 7,\n           'power': 10,\n           'strenght': 10,\n           'agility': 10,\n           'vitality': 10},\n          {'name': 'wolverine',\n            'intelligence': 5,\n            'power': 8,\n            'strenght': 8,\n            'agility': 9,\n            'vitality': 10}\n    ]\n)</code></pre>\n<ul>\n<li><span style=\"color: #ba372a; background-color: #ced4d9;\">compare_cards(card_of_player_a, card_of_player_b, score)</span>\u00a0</li>\n</ul>\n<pre class=\"language-python\"><code># EXEMPLO: 1\n\nscore = (0, 0,)\n\nhuck_card = card_of_player_a[1]\nwolverine_card = card_of_player_b[1]\n\nupdated_score = compare_cards(huck_card, wolverine_card, score) \nprint(updated_score)\n\n&gt; (1, 0)</code></pre>\n<ul>\n<li><span style=\"color: #ba372a; background-color: #ced4d9;\">play(card_list, score)</span></li>\n</ul>\n<pre class=\"language-python\"><code># EXEMPLO: 1\n\nscore = (0, 0,)\nfinal_score = play(SUPER_HEROS, score)\nprint(final_score)\n\n&gt; (1, 1)</code></pre>\n<p>\u00a0</p>\n<h2 id=\"mcetoc_1eh146n6m3\">Crit\u00e9rios de aceita\u00e7\u00e3o</h2>\n<table data-sourcepos=\"22:1-28:140\" dir=\"auto\" style=\"height: 147px; width: 1025.45px;\">\n<thead>\n<tr data-sourcepos=\"22:1-22:35\" style=\"height: 21px;\">\n<th data-sourcepos=\"22:2-22:4\" style=\"height: 21px; width: 40.2188px;\">pts</th>\n<th data-sourcepos=\"22:6-22:12\" style=\"height: 21px; width: 247.219px;\">Dado</th>\n<th data-sourcepos=\"22:14-22:24\" style=\"height: 21px; width: 411.219px;\">Quando</th>\n<th data-sourcepos=\"22:26-22:34\" style=\"height: 21px; width: 270.219px;\">\u00c9 esperado</th>\n</tr>\n</thead>\n<tbody>\n<tr style=\"height: 65px;\">\n<td style=\"width: 40.2188px; height: 40px;\">3.0</td>\n<td style=\"width: 247.219px; height: 40px;\">Fun\u00e7\u00e3o <span style=\"color: #ba372a; background-color: #ced4d9;\">get_players_decks</span></td>\n<td style=\"width: 411.219px; height: 40px;\">Executada a bateria de testes semelhante ao que foi especificado nas\u00a0<strong>Entradas e Sa\u00eddas</strong></td>\n<td style=\"width: 270.219px; height: 40px;\">A fun\u00e7\u00e3o retorne como esperado</td>\n</tr>\n<tr style=\"height: 43px;\">\n<td style=\"width: 40.2188px; height: 43px;\">3.0</td>\n<td style=\"width: 247.219px; height: 43px;\">Fun\u00e7\u00e3o <span style=\"color: #ba372a; background-color: #ced4d9;\">compare_cards</span></td>\n<td style=\"width: 411.219px; height: 43px;\">Executada a bateria de testes semelhante ao que foi especificado nas\u00a0<strong>Entradas e Sa\u00eddas</strong></td>\n<td style=\"width: 270.219px; height: 43px;\">A fun\u00e7\u00e3o retorna como esperado</td>\n</tr>\n<tr style=\"height: 43px;\">\n<td style=\"width: 40.2188px; height: 43px;\">4.0</td>\n<td style=\"width: 247.219px; height: 43px;\">Fun\u00e7\u00e3o <span style=\"color: #ba372a; background-color: #ced4d9;\">play</span></td>\n<td style=\"width: 411.219px; height: 43px;\">Executada a bateria de testes semelhante ao que foi especificado nas\u00a0<strong>Entradas e Sa\u00eddas</strong></td>\n<td style=\"width: 270.219px; height: 43px;\">A fun\u00e7\u00e3o retorna como esperado</td>\n</tr>\n</tbody>\n</table>\n<p>\u00a0</p>\n<p id=\"mcetoc_1egvoav555h\"></p>\n<h1 id=\"mcetoc_1egvoav555j\">Entreg\u00e1veis</h1>\n<ul>\n<li>Link do\u00a0<strong>reposit\u00f3rio</strong>\u00a0do GitLab\n<ul>\n<li><strong>Commits</strong>\n<ul>\n<li>Ser\u00e1 considerado o commit com timestamp anterior ao da entrega no canvas\u00a0</li>\n</ul>\n</li>\n<li><strong>C\u00f3digo</strong>\u00a0fonte\n<ul>\n<li>arquivos/m\u00f3dulos com o c\u00f3digo solu\u00e7\u00e3o</li>\n<li>arquivo(s) com os testes utilizados</li>\n</ul>\n</li>\n<li><strong>Privacidade</strong>\n<ul>\n<li>Privado</li>\n<li>Incluir seu peer coach, facilitador e instrutor como desenvolvedores</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Descri\u00e7\u00e3o dos\u00a0<strong>passos realizados</strong>\u00a0para resolu\u00e7\u00e3o do problema</li>\n</ul>\n<p>\u00a0</p>\n<p style=\"text-align: center;\"><strong><span style=\"font-family: sans-serif; font-size: 32px; text-align: center;\">Boa divers\u00e3o dev! \ud83d\ude01</span></strong></p>\n"
}